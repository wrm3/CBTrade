---
description:
globs:
alwaysApply: true
---
# Documentation Templates System Rule

Whenever you use this rule, start your message with the following:

"Applying standardized documentation templates..."

This rule provides reusable templates for tasks, bugs, and design fixes to ensure consistent documentation quality and reduce creation overhead.

## Purpose

Create a standardized template system that streamlines documentation creation while maintaining consistency across all fstrent_tasks_v2 system components.

## Activation Points

### TASK_CREATION (AUTOMATIC)
**When:** New task is created
**Actions:**
1. Apply appropriate task template based on type
2. Pre-populate standard fields and sections
3. Include relevant checklists and guidelines
4. Ensure consistent formatting and structure

### BUG_DOCUMENTATION (TRIGGERED)
**When:** Bug task type is selected
**Actions:**
1. Apply bug tracking template with severity levels
2. Include reproduction steps template
3. Add environment and context sections
4. Incorporate fix validation checklist

### DESIGN_FIX_CAPTURE (TRIGGERED)
**When:** Design fix documentation is needed
**Actions:**
1. Apply design fix template with problem/solution structure
2. Include context and impact assessment sections
3. Add implementation details and testing requirements
4. Incorporate lessons learned documentation

## Core Templates

### Standard Task Template
```markdown
# Task: {title}
**ID:** {task_id}
**Priority:** {critical|high|medium|low}
**Status:** {pending|in-progress|review|completed}
**Estimated Effort:** {story_points}

## Objective
{Clear, actionable goal description}

## Acceptance Criteria
- [ ] {Specific, measurable outcome}
- [ ] {Verification requirement}
- [ ] {Quality standard}

## Implementation Notes
{Technical details, dependencies, constraints}

## Verification
- [ ] Functionality tested
- [ ] Documentation updated
- [ ] Integration verified
```

### Bug Template
```markdown
# Bug: {title}
**ID:** {bug_id}
**Severity:** {critical|high|medium|low}
**Source:** {user_report|testing|production|code_review}
**Status:** {open|investigating|fixing|testing|closed}

## Problem Description
{What is broken or not working as expected}

## Reproduction Steps
1. {Step-by-step instructions}
2. {Expected vs actual behavior}

## Environment
- System: {operating_system}
- Version: {software_version}
- Configuration: {relevant_settings}

## Fix Implementation
{Solution approach and technical details}

## Verification
- [ ] Bug reproduced
- [ ] Fix implemented
- [ ] Regression testing completed
```

### Design Fix Template
```markdown
# Design Fix: {title}
**Context:** {Original issue or improvement need}
**Impact:** {Affected systems or workflows}
**Date:** {implementation_date}

## Problem Analysis
{Root cause and contributing factors}

## Solution Implementation
{What was changed and why}

## Validation Results
{Evidence that fix addresses the problem}

## Lessons Learned
{Insights for preventing similar issues}
```

## Template Selection Logic

### Task Type Classification
- **Feature Development**: Standard task template with implementation focus
- **Bug Resolution**: Bug template with reproduction and fix tracking
- **Design Improvement**: Design fix template with analysis and validation
- **Documentation**: Simplified template with content and review sections
- **Infrastructure**: Technical template with deployment and monitoring requirements

### Automatic Template Assignment
- Analyze task title and description for type indicators
- Apply most appropriate template based on classification
- Allow manual template override for edge cases
- Maintain template usage statistics for optimization

## Integration Points

**Task System Integration:**
- Seamlessly integrate with task creation workflow
- Maintain template consistency across all task files
- Support template evolution and version management

**Bug Tracking Integration:**
- Coordinate with bug tracking workflow for severity and source attribution
- Ensure consistent bug documentation across all reports
- Support bug lifecycle tracking through template structure

**Design Fix Integration:**
- Align with design fix workflow for retroactive documentation
- Capture design decisions and rationale systematically
- Support knowledge transfer through standardized format

**Quality Assurance:**
- Validate template completion before task finalization
- Monitor template usage effectiveness and user satisfaction
- Continuously improve templates based on feedback and usage patterns

---

*This rule ensures consistent, high-quality documentation across all fstrent_tasks_v2 system components through standardized, reusable templates.*
